//
//  ViewController.swift
//  Concentration Cards
//
//  Created by Evgeniy Nosko on 31.08.21.
//

import UIKit

class ViewController: UIViewController {
    
    @IBOutlet var buttonCollection: [UIButton]!
    @IBOutlet weak var touchLabel: UILabel!
    
    //    —Å–æ–∑–¥–∞–µ–º —ç–∫–∑–µ–º–ø–ª—è—Ä –∫–ª–∞—Å—Å–∞
    //    lazy - –Ω–µ –±—É–¥–µ—Ç –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–∞, –ø–æ–∫–∞ –Ω–µ –±—É–¥–µ—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∞
    lazy var game = ConcentrationGame(numberOfPairsOfCards: (buttonCollection.count + 1) / 2)
    
    var touches = 0 {
        //        Observer - —Å–ª–µ–¥–∏—Ç –∑–∞ –∏–∑–º–µ–Ω–µ–Ω–∏–µ–º –∑–Ω–∞—á–µ–Ω–∏—è –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π touches, –µ—Å–ª–∏ –æ–Ω–∞ –∏–∑–º–µ–Ω—è–µ—Ç—Å—è, —Ç–æ –≤—ã–ø–æ–ª–Ω—è–µ—Ç –∫–æ–¥ (touchLabel.text = "Touches: \(touches)")
        didSet {
            touchLabel.text = "Touches: \(touches)"
        }
    }
    
//    func flipButton(emoji: String, button: UIButton) {
//        //      currentTitle - –∑–∞–≥–æ–ª–æ–≤–æ–∫ –∫–æ—Ç–æ—Ä—ã–π –≤–∏–¥–∏–º –≤ –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç
//        if button.currentTitle == emoji {
//            //      setTitle - –∑–∞–≥–æ–ª–æ–≤–æ–∫ –∫–æ—Ç–æ—Ä—ã–π –Ω–∞–∑–Ω–∞—á–∞–µ–º
//            button.setTitle("", for: .normal)
//            button.backgroundColor = .orange
//        } else {
//            button.setTitle(emoji, for: .normal)
//            button.backgroundColor = .white
//        }
//    }
    
    var emojiCollection = ["üê´", "üêú", "ü¶Ö", "üê•", "ü¶â", "ü¶Ü", "ü¶à", "ü¶ß", "ü¶í", "ü¶¢", "üêä", "üê¢"]
    
    var emojiDictionary = [Int: String]()
    
    func emojiIdentifier(for card: Card) -> String {
        if emojiDictionary[card.identifier] == nil {
//            –º–µ—Ç–æ–¥ –∫–æ—Ç–æ—Ä—ã–π –±–µ—Ä–µ—Ç –†–ê–ù–î–û–ú–ù–´–ô –∏–Ω–¥–µ–∫—Å –∏–∑ –°–õ–û–í–ê–†–Ø
            let randomIndex = Int(arc4random_uniform(UInt32(emojiCollection.count)))
            emojiDictionary[card.identifier] = emojiCollection.remove(at: randomIndex)
        }
//        –¢–û–ñ–ï –°–ê–ú–û–ï —á—Ç–æ –Ω–∞–ø–∏—Å–∞–Ω–æ –Ω–∏–∂–µ (return emojiDictionary[card.identifier] ?? "?")
//        if emojiDictionary[card.identifier] != nil {
//            return emojiDictionary[card.identifier]!
//        } else {
//            return "?"
//        }
        return emojiDictionary[card.identifier] ?? "?"
    }
    
    func updateVeiwFromModel() {
        for index in buttonCollection.indices {
            let button = buttonCollection[index]
            let card = game.cards[index]
            if card.isFaceUp {
                button.setTitle(emojiIdentifier(for: card), for: .normal)
                button.backgroundColor = .white
            } else {
                button.setTitle("", for: .normal)
                button.backgroundColor = card.isMatched ? #colorLiteral(red: 1, green: 1, blue: 1, alpha: 0) : #colorLiteral(red: 0.9933148026, green: 0.6221938133, blue: 0.04744280875, alpha: 1)
            }
        }
    }
    
    
    
    @IBAction func buttonAction(_ sender: UIButton) {
        touches += 1
        //        –±–µ–∑–æ–ø–∞—Å–Ω–æ–µ —Ä–∞–∑–≤–æ—Ä–∞—á–∏–≤–∞–µ–Ω–∏–µ –æ–ø—Ü–∏–æ–Ω–∞–ª–∞ (Optional Binding)
        if let buttonIndex = buttonCollection.firstIndex(of: sender) {
            //        –æ–±—Ä–∞—â–∞–µ–º—Å—è –∫ —Ñ—É–Ω–∫—Ü–∏–∏ –∏–∑ –º–æ–¥–µ–ª–∏
            game.chooseCard(at: buttonIndex)
            updateVeiwFromModel()
        }
    }
    
    
}

